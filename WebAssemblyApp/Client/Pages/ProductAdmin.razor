@page "/productadmin/{Id:int}"
@using WebAssemblyApp.Client.ViewModels
@using WebAssemblyApp.Client.ViewModels.Contracts;
@inject IProductViewModel _productViewModel
@inject IJSRuntime jsRuntime
@inject HttpClient _httpClient

<h3>Product Update</h3>
<div class="row col-md-12">
    <div class="col-md-4">
        <img src="@_productViewModel.ProductPicDataUrl" style="width: 250px; height: 250px;margin:10px;">
        <InputFile class="input-btn" OnChange="@OnInputFileChanged"></InputFile>
    </div>
    <div class="col-md-8">
        <input type="text" @bind-value="_productViewModel.Name" class="form-control" placeholder="name">
        <br />
        <input type="text" @bind-value="_productViewModel.Description" class="form-control" placeholder="description">
        <br />
        @*<input type="text" @bind-value="_productViewModel.EmailAddress" class="form-control" placeholder="email address">
        <br />*@
        <button class="btn btn-primary" @onclick="_productViewModel.UpdateProduct">Update Product</button>
        <button class="btn btn-primary" @onclick="DownloadProfilePicture">Download Profile Picture</button>
        <button class="btn btn-primary" @onclick="DownloadServerFile">Download a Document</button>
    @*<span>@_productViewModel.ProductPicDataUrl</span>
        <p>@_productViewModel.ProductPicDataUrl</p>*@
    </div>
</div>
@code{
    [Parameter]
    public int Id { get; set; }

    private async Task OnInputFileChanged(InputFileChangeEventArgs inputFileChangeEvent)
    {
        //get the file
        var file = inputFileChangeEvent.File;

        //read that file in a byte array
        var buffer = new byte[file.Size];
        await file.OpenReadStream(1512000).ReadAsync(buffer);

        //convert byte array to base 64 string
        _productViewModel.ProductPicDataUrl = $"data:image/png;base64,{Convert.ToBase64String(buffer)}";
    }
    protected override async Task OnInitializedAsync() => await _productViewModel.GetProduct(Id);


    private async Task DownloadProfilePicture()
    {
        string[] base64String = _productViewModel.ProductPicDataUrl.Split(',');
        await jsRuntime.InvokeVoidAsync("downloadFile", "image/png", base64String[1], "profile.png");
    }

    private async Task DownloadServerFile()
    {
        //get base64 string from web api call
        var httpResponseMessage = await _httpClient.GetAsync("product/downloadserverfile");
        var base64String = httpResponseMessage.Content.ReadAsStringAsync().Result;

        //call javascript function to download the file
        await jsRuntime.InvokeVoidAsync("downloadFile", "application/vnd.openxmlformats-officedocument.wordprocessingml.document", base64String, "document.docx");
    }
}

